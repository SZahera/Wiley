package inheritances;

import java.util.*;

public class FINALONE {

	public static void main(String[] args) {
	   usershi u1 = new usershi(1,"shifa");
	   usershi u2 = new usershi(2,"zahera");
	   usershi u3 = new usershi(3,"aabid");
	 // Set<Object> t = new TreeSet<Object>(new SortByIntUserIDString());
	 //  Set<Object> t = new TreeSet<Object>(new SortByStringUserIDInt());
			Set<Object> t = new TreeSet<Object>(new SortByAllString());


	   
	  t.add(u1);
	  t.add(u2);
	  t.add(u3);
	  t.add(new Integer(23));
	  t.add(new Integer(34));
	  t.add(new Integer(56));
	  t.add("aadil");
	  t.add("bilal");
	  t.add("zada");
	 // t.stream().forEach(e-> System.out.println(e));
	  System.out.println(t);

		//Set<Object> hash = new TreeSet<Object>(new SortByIntUserIDString());

	}

}


class SortByStringUserIDInt implements Comparator<Object>
{

	@Override
	public int compare(Object o1, Object o2) {
		if(o1 instanceof String)
		{
			if(o2 instanceof String )
			{
				return o1.toString().compareTo(o2.toString());
			}
			else
			{
				return -1;
			}
		}
		else if(o1 instanceof usershi)
		{
			if(o2 instanceof usershi)
			{
				return new SortByUserID().compare((usershi)o1,(usershi)o2);
	
			}
			else
			{
				return -1;
			}
		}
		else if(o1 instanceof Integer)
		{
			if(o2 instanceof Integer)
			{
				return (int)o1-(int)o2;
			}
			else
			{
				return 1;
			}
			
		}
		return 0;
	}
	
}


class SortByStringsInt implements Comparator<Object>
{

	@Override
	public int compare(Object o1, Object o2) {
		if(o1 instanceof Integer)
		{
			if(o2 instanceof Integer)
			{
				return (int)o1-(int)o2;
			}
			else 
			{
				return 1;
			}
			
		
		}
		else if(o1 instanceof String)
		{
			if(o2 instanceof String)
			{
				return new Stringobj().compare(o1,o2);
				//return o1.toString().compareTo(o2.toString());
			}
			else if(o2 instanceof usershi)
			{
				return new Stringobj().compare(o1,o2);
			}
			else
			{
				return -1;
			}
		}
		else if(o1 instanceof usershi)
		{
			if(o2 instanceof usershi)
			{
				return new Stringobj().compare(o1,o2);
			}
			else if(o2 instanceof String)
			{
				return new SortByString().compare(o1, o2);
			}
			else
			{
				return -1;
			}
			
		}
		
		return 0;
	}
	
}


class Stringobj implements Comparator<Object>
{

	@Override
	public int compare(Object o1, Object o2) {
		// TODO Auto-generated method stub
		if(o1 instanceof usershi  )
		{
			if(o2 instanceof usershi)
			{
				((usershi) o1).getName().compareTo(((usershi)o2).getName());
			}
			else if(o2 instanceof String)
			{
				((usershi)o1).getName().compareTo(o2.toString());
			}
		}
		else if(o1 instanceof String)
		{
			if(o2 instanceof String)
			{
				return o1.toString().compareTo(o2.toString());
			}
			else if(o2 instanceof usershi)
			{
				return ((usershi)o2).getName().compareTo(o1.toString());
			}
		}
		return 0;
	}
	
}











class SortByIntUserIDString implements Comparator<Object>{
	@Override
	public int compare(Object o1, Object o2) {
		// TODO Auto-generated method stub
		if(o1 instanceof Integer)
		{
			if(o2 instanceof Integer)
			{
				return (int)o1 -(int)o2;
			}
			
			else
			{
				return -1;
			}
			
		}
		else if(o1 instanceof usershi) {
			if(o2 instanceof usershi)
				return new SortByUserID().compare((usershi)o1,(usershi)o2);
			else
				return -1;
		}
		else if(o1 instanceof String){
			if(o2 instanceof String)
				return o1.toString().compareTo(o2.toString());
			else
				return 1;
		}
		return 0;
	}
	
}

class SortByUserID implements Comparator<usershi>
{

	public int compare(usershi o1,usershi o2) {
		// TODO Auto-generated method stub
		
		return o1.getId()-o2.getId();
	}

}


class usershi
{
	private int id;
	private String name;
	public usershi(int id,String name)
	{
		super();
		this.id = id;
		this.name =name;
	}
	@Override
	public String toString() {
		return id + " " + name ;
	}
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}

}






class SortByAllString implements Comparator<Object>{

	@Override
	public int compare(Object o1, Object o2) {
		// TODO Auto-generated method stub
		if(o1 instanceof Integer) {
			if(o2 instanceof Integer)
				return (int)o1-(int)o2;
			else
				return 1;
		}

		else if(o1 instanceof String){
			if(o2 instanceof String)
				return ((String)o1).compareTo((String)o2);
			else if(o2 instanceof usershi)
				return new SortByString().compare(o1, o2);
			else
				return -1;
		}
		else if(o1 instanceof usershi) {
			if(o2 instanceof usershi)
				return new SortByUserName().compare((usershi)o1, (usershi)o2);
			else if(o2 instanceof String)
				return new SortByString().compare(o1, o2);
			else
				return -1;
		}

		return 0;
	}
	
}


class SortByUserName implements Comparator<usershi>{

	@Override
	public int compare(usershi o1, usershi o2) {
		// TODO Auto-generated method stub
		return o1.getName().compareTo(o2.getName());
	}
	
}




class SortByString implements Comparator<Object>{
    @Override
    public int compare(Object o1, Object o2) {
        // TODO Auto-generated method stub
        if(o1 instanceof usershi) {
        	if(o2 instanceof String)
        		return ((usershi) o1).getName().compareTo((String) o2);
        }
        else if(o1 instanceof String) {
        	if(o2 instanceof usershi)
        		return ((String) o1).compareTo(((usershi) o2).getName());
        }
        return 0;
    }
}









